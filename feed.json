{
    "version": "https://jsonfeed.org/version/1",
    "title": "howe-ren.github.io",
    "description": "",
    "home_page_url": "https://howe-ren.github.io",
    "feed_url": "https://howe-ren.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Howe"
    },
    "items": [
        {
            "id": "https://howe-ren.github.io/hexoguan-li-githubcang-ku-page/",
            "url": "https://howe-ren.github.io/hexoguan-li-githubcang-ku-page/",
            "title": "Hexo管理Github仓库Page",
            "summary": "要使用Hexo管理GitHub仓库的网页，您需要遵循以下步骤： 在GitHub上创建一个新的仓库，用于存储Hexo生成的静态网页。请确保您已经安装了Git并且已经配置了您的GitHub帐户。 在本地计算机上安装Hexo。可以使用npm（Node.js包管理器）来安装Hexo。在命令行中运行以下命令： npm install&hellip;",
            "content_html": "<p>要使用Hexo管理GitHub仓库的网页，您需要遵循以下步骤：</p>\n<ol>\n<li>\n<p>在GitHub上创建一个新的仓库，用于存储Hexo生成的静态网页。请确保您已经安装了Git并且已经配置了您的GitHub帐户。</p>\n</li>\n<li>\n<p>在本地计算机上安装Hexo。可以使用npm（Node.js包管理器）来安装Hexo。在命令行中运行以下命令：</p>\n<pre><code class=\"hljs\">npm install -g hexo-cli\n</code></pre>\n</li>\n<li>\n<p>创建一个新的Hexo网站。在命令行中，导航到您想要创建Hexo网站的目录，然后运行以下命令：</p>\n<div class=\"code-enhance-3SZ8dc\">\n<div class=\"code-enhance-header-s09N-k\"> </div>\n<div class=\"code-enhance-content-FbOCP7\"><code class=\"hljs language-php-template\"><span class=\"xml\">hexo init <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">folder</span>&gt;</span>\ncd <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">folder</span>&gt;</span>\nnpm install\n</span></code></div>\n</div>\n<p>这将创建一个包含默认主题和示例内容的新Hexo网站。</p>\n</li>\n<li>\n<p>配置Hexo以将生成的静态网页发布到GitHub Pages。在Hexo网站的根目录中，打开_config.yml文件，找到以下行：</p>\n<div class=\"code-enhance-3SZ8dc\">\n<div class=\"code-enhance-header-s09N-k\"> </div>\n<div class=\"code-enhance-content-FbOCP7\"><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">deploy:</span>\n  <span class=\"hljs-attr\">type:</span>\n</code></div>\n</div>\n<p>将<code>type</code>更改为<code>github</code>。然后，在同一文件中，找到以下行：</p>\n<div class=\"code-enhance-3SZ8dc\">\n<div class=\"code-enhance-header-s09N-k\"> </div>\n<div class=\"code-enhance-content-FbOCP7\"><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">deploy:</span>\n  <span class=\"hljs-attr\">repo:</span>\n</code></div>\n</div>\n<p>将<code>repo</code>更改为您在步骤1中创建的GitHub仓库的URL，例如：</p>\n<div class=\"code-enhance-3SZ8dc\">\n<div class=\"code-enhance-header-s09N-k\"> </div>\n<div class=\"code-enhance-content-FbOCP7\"><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">deploy:</span>\n  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">git@github.com:yourusername/yourusername.github.io.git</span>\n</code></div>\n</div>\n<p>保存并关闭文件。</p>\n</li>\n<li>\n<p>生成并发布Hexo网站。在命令行中，运行以下命令：</p>\n<pre><code class=\"hljs\">hexo generate\nhexo deploy\n</code></pre>\n<p>这将生成静态网页并将其发布到您在步骤4中配置的GitHub仓库中。</p>\n</li>\n<li>\n<p>在GitHub上启用GitHub Pages。在GitHub仓库的设置页面中，将GitHub Pages设置为使用“master”分支和“/”目录。保存更改后，您的Hexo网站应该可以在GitHub Pages上访问了。</p>\n</li>\n</ol>",
            "author": {
                "name": "Howe"
            },
            "tags": [
            ],
            "date_published": "2023-04-15T02:12:06+08:00",
            "date_modified": "2023-04-15T03:09:06+08:00"
        },
        {
            "id": "https://howe-ren.github.io/test-publii/",
            "url": "https://howe-ren.github.io/test-publii/",
            "title": "test-publii",
            "summary": "### title contents",
            "content_html": "<p>### title</p>\n<p>contents</p>",
            "author": {
                "name": "Howe"
            },
            "tags": [
            ],
            "date_published": "2023-04-14T20:35:49+08:00",
            "date_modified": "2023-04-14T20:35:49+08:00"
        }
    ]
}
