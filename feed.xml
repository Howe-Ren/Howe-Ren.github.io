<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>howe-ren.github.io</title>
    <link href="https://howe-ren.github.io/feed.xml" rel="self" />
    <link href="https://howe-ren.github.io" />
    <updated>2023-04-15T02:12:06+08:00</updated>
    <author>
        <name>Howe</name>
    </author>
    <id>https://howe-ren.github.io</id>

    <entry>
        <title>Hexo管理Github仓库Page</title>
        <author>
            <name>Howe</name>
        </author>
        <link href="https://howe-ren.github.io/hexoguan-li-githubcang-ku-page/"/>
        <id>https://howe-ren.github.io/hexoguan-li-githubcang-ku-page/</id>

        <updated>2023-04-15T02:12:06+08:00</updated>
            <summary>
                <![CDATA[
                    要使用Hexo管理GitHub仓库的网页，您需要遵循以下步骤： 在GitHub上创建一个新的仓库，用于存储Hexo生成的静态网页。请确保您已经安装了Git并且已经配置了您的GitHub帐户。 在本地计算机上安装Hexo。可以使用npm（Node.js包管理器）来安装Hexo。在命令行中运行以下命令： npm install -g hexo-cli 创建一个新的Hexo网站。在命令行中，导航到您想要创建Hexo网站的目录，然后运行以下命令： Copy code hexo init &lt;folder&gt; cd &lt;folder&gt; npm install 这将创建一个包含默认主题和示例内容的新Hexo网站。 配置Hexo以将生成的静态网页发布到GitHub Pages。在Hexo网站的根目录中，打开_config.yml文件，找到以下行： Copy code deploy: type: 将type更改为github。然后，在同一文件中，找到以下行： Copy code deploy: repo: 将repo更改为您在步骤1中创建的GitHub仓库的URL，例如： Copy code deploy: repo: git@github.com:yourusername/yourusername.github.io.git 保存并关闭文件。 生成并发布Hexo网站。在命令行中，运行以下命令： hexo generate hexo deploy 这将生成静态网页并将其发布到您在步骤4中配置的GitHub仓库中。 在GitHub上启用GitHub Pages。在GitHub仓库的设置页面中，将GitHub Pages设置为使用“master”分支和“/”目录。保存更改后，您的Hexo网站应该可以在GitHub&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>要使用Hexo管理GitHub仓库的网页，您需要遵循以下步骤：</p>
<ol>
<li>
<p>在GitHub上创建一个新的仓库，用于存储Hexo生成的静态网页。请确保您已经安装了Git并且已经配置了您的GitHub帐户。</p>
</li>
<li>
<p>在本地计算机上安装Hexo。可以使用npm（Node.js包管理器）来安装Hexo。在命令行中运行以下命令：</p>
<pre><code class="hljs">npm install -g hexo-cli
</code></pre>
</li>
<li>
<p>创建一个新的Hexo网站。在命令行中，导航到您想要创建Hexo网站的目录，然后运行以下命令：</p>
<div class="code-enhance-3SZ8dc">
<div class="code-enhance-header-s09N-k">php<span class="code-enhance-copy-9TQ90J"><svg aria-hidden="true" focusable="false" role="img" class="octicon octicon-copy" viewbox="0 0 16 16" width="12" height="12" fill="currentColor"><path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg>Copy code</span></div>
<div class="code-enhance-content-FbOCP7"><code class="hljs language-php-template"><span class="xml">hexo init <span class="hljs-tag">&lt;<span class="hljs-name">folder</span>&gt;</span>
cd <span class="hljs-tag">&lt;<span class="hljs-name">folder</span>&gt;</span>
npm install
</span></code></div>
</div>
<p>这将创建一个包含默认主题和示例内容的新Hexo网站。</p>
</li>
<li>
<p>配置Hexo以将生成的静态网页发布到GitHub Pages。在Hexo网站的根目录中，打开_config.yml文件，找到以下行：</p>
<div class="code-enhance-3SZ8dc">
<div class="code-enhance-header-s09N-k">yaml<span class="code-enhance-copy-9TQ90J"><svg aria-hidden="true" focusable="false" role="img" class="octicon octicon-copy" viewbox="0 0 16 16" width="12" height="12" fill="currentColor"><path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg>Copy code</span></div>
<div class="code-enhance-content-FbOCP7"><code class="hljs language-yaml"><span class="hljs-attr">deploy:</span>
  <span class="hljs-attr">type:</span>
</code></div>
</div>
<p>将<code>type</code>更改为<code>github</code>。然后，在同一文件中，找到以下行：</p>
<div class="code-enhance-3SZ8dc">
<div class="code-enhance-header-s09N-k">yaml<span class="code-enhance-copy-9TQ90J"><svg aria-hidden="true" focusable="false" role="img" class="octicon octicon-copy" viewbox="0 0 16 16" width="12" height="12" fill="currentColor"><path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg>Copy code</span></div>
<div class="code-enhance-content-FbOCP7"><code class="hljs language-yaml"><span class="hljs-attr">deploy:</span>
  <span class="hljs-attr">repo:</span>
</code></div>
</div>
<p>将<code>repo</code>更改为您在步骤1中创建的GitHub仓库的URL，例如：</p>
<div class="code-enhance-3SZ8dc">
<div class="code-enhance-header-s09N-k">yaml<span class="code-enhance-copy-9TQ90J"><svg aria-hidden="true" focusable="false" role="img" class="octicon octicon-copy" viewbox="0 0 16 16" width="12" height="12" fill="currentColor"><path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg>Copy code</span></div>
<div class="code-enhance-content-FbOCP7"><code class="hljs language-yaml"><span class="hljs-attr">deploy:</span>
  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:yourusername/yourusername.github.io.git</span>
</code></div>
</div>
<p>保存并关闭文件。</p>
</li>
<li>
<p>生成并发布Hexo网站。在命令行中，运行以下命令：</p>
<pre><code class="hljs">hexo generate
hexo deploy
</code></pre>
<p>这将生成静态网页并将其发布到您在步骤4中配置的GitHub仓库中。</p>
</li>
<li>
<p>在GitHub上启用GitHub Pages。在GitHub仓库的设置页面中，将GitHub Pages设置为使用“master”分支和“/”目录。保存更改后，您的Hexo网站应该可以在GitHub Pages上访问了。</p>
</li>
</ol>
            ]]>
        </content>
    </entry>
    <entry>
        <title>test-publii</title>
        <author>
            <name>Howe</name>
        </author>
        <link href="https://howe-ren.github.io/test-publii/"/>
        <id>https://howe-ren.github.io/test-publii/</id>

        <updated>2023-04-14T20:35:49+08:00</updated>
            <summary>
                <![CDATA[
                    ### title contents
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>### title</p>
<p>contents</p>
            ]]>
        </content>
    </entry>
</feed>
